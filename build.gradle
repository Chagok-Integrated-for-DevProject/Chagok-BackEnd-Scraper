plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'com.google.cloud.tools.jib' version '3.1.4'
}


jib {
	if (project.hasProperty("runJib") && project.property("runJib") == "true") {

		from {
			image = "eclipse-temurin:17-jre-alpine"
		}
		to {
			image = 'dearon/chagok-scrap'
			tags = [project.version, 'latest'] as List<String>
			auth {
				username = project.findProperty("docker.repo.username")
				password = project.findProperty("docker.repo.password")
			}
		}
		container {
			ports = ['8080']
			jvmFlags = ['-Dspring.profiles.active=deploy']
		}
	}
}


group = 'com.project.chagok.backend'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	implementation 'org.jsoup:jsoup:1.16.1'
	implementation 'org.seleniumhq.selenium:selenium-java:4.11.0'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'io.github.bonigarcia:webdrivermanager:5.5.2'

	implementation 'org.openkoreantext:open-korean-text:2.3.1'
	implementation 'org.scala-lang:scala-library:2.12.4'
	implementation 'com.twitter.penguin:korean-text:4.4.4'
}

tasks.named('test') {
	useJUnitPlatform()
}
